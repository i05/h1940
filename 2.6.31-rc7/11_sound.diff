commit a5576ea521f5e7c79bd2983d331971905607cd17
Author: sk <sk@sx.net.eu.org>
Date:   Tue Nov 17 10:52:15 2009 +0300

    sound driver, ASOC based

diff --git a/arch/arm/mach-s3c2410/include/mach/h1940-latch.h b/arch/arm/mach-s3c2410/include/mach/h1940-latch.h
index d8a8327..f2367e9 100644
--- a/arch/arm/mach-s3c2410/include/mach/h1940-latch.h
+++ b/arch/arm/mach-s3c2410/include/mach/h1940-latch.h
@@ -55,7 +55,9 @@
 	H1940_LATCH_LCD_P2		| \
 	H1940_LATCH_LCD_P3		| \
 	H1940_LATCH_MAX1698_nSHUTDOWN   | \
-	H1940_LATCH_CPUQ5
+	H1940_LATCH_CPUQ5		| \
+	H1940_LATCH_UDA_POWER /*		| \
+	H1940_LATCH_AUDIO_POWER */
 
 /* control functions */
 
diff --git a/arch/arm/plat-s3c24xx/adc.c b/arch/arm/plat-s3c24xx/adc.c
index 91d1fce..16529bb 100644
--- a/arch/arm/plat-s3c24xx/adc.c
+++ b/arch/arm/plat-s3c24xx/adc.c
@@ -11,6 +11,8 @@
  * the Free Software Foundation; either version 2 of the License.
 */
 
+#define DEBUG
+
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/platform_device.h>
@@ -340,7 +342,7 @@ static irqreturn_t s3c_adc_irq(int irq, void *pw)
 
 	data0 = readl(adc->regs + S3C2410_ADCDAT0);
 	data1 = readl(adc->regs + S3C2410_ADCDAT1);
-	adc_dbg(adc, "read %d: 0x%04x, 0x%04x\n", client->nr_samples, data0, data1);
+	//adc_dbg(adc, "read %d: 0x%04x, 0x%04x\n", client->nr_samples, data0, data1);
 
 	client->nr_samples--;
 
diff --git a/arch/arm/plat-s3c24xx/pwm.c b/arch/arm/plat-s3c24xx/pwm.c
index 82a6d4d..b1ec6f1 100644
--- a/arch/arm/plat-s3c24xx/pwm.c
+++ b/arch/arm/plat-s3c24xx/pwm.c
@@ -11,6 +11,8 @@
  * the Free Software Foundation; either version 2 of the License.
 */
 
+#define DEBUG
+
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/platform_device.h>
@@ -263,14 +265,20 @@ int pwm_config(struct pwm_device *pwm, int duty_ns, int period_ns)
 	__raw_writel(tcmp, S3C2410_TCMPB(pwm->pwm_id));
 	__raw_writel(tcnt, S3C2410_TCNTB(pwm->pwm_id));
 
+	pwm_dbg(pwm, "tcmp=%08x, tcnt=%08x\n", tcmp, tcnt);
+
 	tcon = __raw_readl(S3C2410_TCON);
 	tcon |= pwm_tcon_manulupdate(pwm);
 	tcon |= pwm_tcon_autoreload(pwm);
 	__raw_writel(tcon, S3C2410_TCON);
 
+	pwm_dbg(pwm, "tcon[1]=%08x\n", tcon);
+
 	tcon &= ~pwm_tcon_manulupdate(pwm);
 	__raw_writel(tcon, S3C2410_TCON);
 
+	pwm_dbg(pwm, "tcon[2]=%08x\n", tcon);
+
 	local_irq_restore(flags);
 
 	return 0;
diff --git a/sound/soc/codecs/uda1380.c b/sound/soc/codecs/uda1380.c
index 5b21594..f7b2292 100644
--- a/sound/soc/codecs/uda1380.c
+++ b/sound/soc/codecs/uda1380.c
@@ -16,6 +16,8 @@
  * Copyright 2005 Openedhand Ltd.
  */
 
+#define DEBUG
+
 #include <linux/module.h>
 #include <linux/init.h>
 #include <linux/types.h>
diff --git a/sound/soc/s3c24xx/Kconfig b/sound/soc/s3c24xx/Kconfig
index df494d1..66a31fa 100644
--- a/sound/soc/s3c24xx/Kconfig
+++ b/sound/soc/s3c24xx/Kconfig
@@ -29,6 +29,14 @@ config SND_S3C2443_SOC_AC97
 	select AC97_BUS
 	select SND_SOC_AC97_BUS
 	
+config SND_S3C24XX_SOC_H1940_UDA1380
+	tristate "SoC I2S Audio for IPAQ h1940"
+	depends on SND_S3C24XX_SOC && ARCH_H1940
+	select SND_S3C24XX_SOC_I2S
+	select SND_SOC_UDA1380
+	help
+	  Sound support for IPAQ h1940 PDA.
+
 config SND_S3C24XX_SOC_NEO1973_WM8753
 	tristate "SoC I2S Audio support for NEO1973 - WM8753"
 	depends on SND_S3C24XX_SOC && MACH_NEO1973_GTA01
diff --git a/sound/soc/s3c24xx/Makefile b/sound/soc/s3c24xx/Makefile
index 07a93a2..4f6c370 100644
--- a/sound/soc/s3c24xx/Makefile
+++ b/sound/soc/s3c24xx/Makefile
@@ -19,9 +19,11 @@ snd-soc-neo1973-wm8753-objs := neo1973_wm8753.o
 snd-soc-smdk2443-wm9710-objs := smdk2443_wm9710.o
 snd-soc-ln2440sbc-alc650-objs := ln2440sbc_alc650.o
 snd-soc-s3c24xx-uda134x-objs := s3c24xx_uda134x.o
+snd-soc-h1940-uda1380-objs := h1940_uda1380.o
 
 obj-$(CONFIG_SND_S3C24XX_SOC_JIVE_WM8750) += snd-soc-jive-wm8750.o
 obj-$(CONFIG_SND_S3C24XX_SOC_NEO1973_WM8753) += snd-soc-neo1973-wm8753.o
 obj-$(CONFIG_SND_S3C24XX_SOC_SMDK2443_WM9710) += snd-soc-smdk2443-wm9710.o
 obj-$(CONFIG_SND_S3C24XX_SOC_LN2440SBC_ALC650) += snd-soc-ln2440sbc-alc650.o
 obj-$(CONFIG_SND_S3C24XX_SOC_S3C24XX_UDA134X) += snd-soc-s3c24xx-uda134x.o
+obj-$(CONFIG_SND_S3C24XX_SOC_H1940_UDA1380) += snd-soc-h1940-uda1380.o
diff --git a/sound/soc/s3c24xx/h1940_uda1380.c b/sound/soc/s3c24xx/h1940_uda1380.c
new file mode 100644
index 0000000..5613857
--- /dev/null
+++ b/sound/soc/s3c24xx/h1940_uda1380.c
@@ -0,0 +1,126 @@
+#include <linux/module.h>
+#include <linux/moduleparam.h>
+#include <linux/platform_device.h>
+#include <linux/delay.h>
+#include <sound/soc.h>
+#include <sound/soc-dapm.h>
+
+#include <asm/mach-types.h>
+#include <plat/regs-iis.h>
+#include <mach/h1940-latch.h>
+
+#include "s3c24xx-pcm.h"
+#include "s3c24xx-i2s.h"
+#include "../codecs/uda1380.h"
+
+static int h1940_uda_hw_params(struct snd_pcm_substream *substream,
+	struct snd_pcm_hw_params *params) 
+{
+	struct snd_soc_pcm_runtime *rtd = substream->private_data;
+	struct snd_soc_dai *codec_dai = rtd->dai->codec_dai;
+	struct snd_soc_dai *cpu_dai = rtd->dai->cpu_dai;
+	int res;
+	unsigned long clkrate = s3c24xx_i2s_get_clockrate(), prescale;
+
+	prescale = clkrate / (256*params_rate(params));
+	if(prescale < 32) prescale++;
+
+	printk(KERN_DEBUG "fs: %i, iis_clkrate: %lu, prescale: %lu\n", 
+		params_rate(params), clkrate, prescale);
+
+	res = snd_soc_dai_set_fmt(codec_dai, SND_SOC_DAIFMT_I2S |
+		SND_SOC_DAIFMT_NB_NF | SND_SOC_DAIFMT_CBS_CFS);
+	if(res < 0) return res;
+
+	res = snd_soc_dai_set_fmt(cpu_dai, SND_SOC_DAIFMT_I2S |
+		SND_SOC_DAIFMT_NB_NF | SND_SOC_DAIFMT_CBS_CFS);
+	if(res < 0) return res;
+
+	res = snd_soc_dai_set_clkdiv(cpu_dai, S3C24XX_DIV_MCLK,
+		S3C2410_IISMOD_256FS);
+	if(res < 0) return res;
+
+	res = snd_soc_dai_set_clkdiv(cpu_dai, S3C24XX_DIV_BCLK,
+		S3C2410_IISMOD_32FS);
+	if(res < 0) return res;
+
+	res = snd_soc_dai_set_clkdiv(cpu_dai, S3C24XX_DIV_PRESCALER,
+		S3C24XX_PRESCALE(prescale, prescale));
+	if(res < 0) return res;
+
+	return 0;
+}
+
+static struct snd_soc_ops h1940_uda_ops = {
+	.hw_params = h1940_uda_hw_params,
+	/* .hw_free = h1940_uda_hw_free, */
+};
+
+int h1940_uda_dai_init(struct snd_soc_codec *codec) {
+	printk(KERN_DEBUG "h1940_uda_dai_init entered\n");
+	snd_soc_dapm_enable_pin(codec, "HeadPhone Driver");
+	snd_soc_dapm_sync(codec);
+	return 0;
+}
+
+static struct snd_soc_dai_link h1940_dai[] = {
+{
+	.name = "uda1380",
+	.stream_name = "uda1380 hi-fi",
+	.cpu_dai = &s3c24xx_i2s_dai,
+	.codec_dai = &uda1380_dai[UDA1380_DAI_DUPLEX],
+	.init = h1940_uda_dai_init,
+	.ops = &h1940_uda_ops,
+},
+};
+
+static struct uda1380_setup_data h1940_uda1380_setup = {
+	.i2c_bus = 0,
+	.i2c_address = 0x1a,
+	.dac_clk = UDA1380_DAC_CLK_WSPLL,
+};
+
+static struct snd_soc_card h1940_soc_card = {
+	.name = "h1940_uda1380",
+	.platform = &s3c24xx_soc_platform,
+	.dai_link = h1940_dai,
+	.num_links = 1,
+};
+
+static struct snd_soc_device h1940_snd_devdata = {
+	.card = &h1940_soc_card,
+	.codec_dev = &soc_codec_dev_uda1380,
+	.codec_data = &h1940_uda1380_setup,
+};
+
+static struct platform_device *h1940_snd_device;
+
+static int __init h1940_uda_init(void) {
+	int res;
+
+	if(!machine_is_h1940())
+		return -ENODEV;
+
+	//h1940_latch_control(H1940_LATCH_AUDIO_POWER, H1940_LATCH_UDA_POWER);
+	//mdelay(2);
+
+	h1940_snd_device = platform_device_alloc("soc-audio", -1);
+	if(!h1940_snd_device)
+		return -ENOMEM;
+	platform_set_drvdata(h1940_snd_device, &h1940_snd_devdata);
+	h1940_snd_devdata.dev = &h1940_snd_device->dev;
+	res = platform_device_add(h1940_snd_device);
+	if(res) {
+		platform_device_put(h1940_snd_device);
+		return res;
+	}
+	return 0;
+}
+
+static void __exit h1940_uda_exit(void) {
+	platform_device_unregister(h1940_snd_device);
+}
+
+module_init(h1940_uda_init);
+module_exit(h1940_uda_exit);
+MODULE_LICENSE("GPL");
diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index 1d70829..c82752e 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -20,6 +20,8 @@
  *   o Support TDM on PCM and I2S
  */
 
+#define DEBUG
+
 #include <linux/module.h>
 #include <linux/moduleparam.h>
 #include <linux/init.h>
